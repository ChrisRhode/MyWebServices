@model HumansDataMVC.Models.Human

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Human</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.fakeSSN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
        @Html.EditorFor(model => model.fakeSSN, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.fakeSSN, "", new { @class = "text-danger" })
            *@
            @*@Html.DisplayFor(model => model.fakeSSN) *@
            @Html.TextBoxFor(model => model.fakeSSN, new {  @readonly="readonly"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.legalFullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.legalFullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.legalFullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.callByFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.callByFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.callByFirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.emailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <p>
        @Html.ActionLink("Add Child", "CreateChild",new { id = Model.fakeSSN})
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.fakeSSN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.legalFullName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Children)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.fakeSSN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.legalFullName)
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteChildFromParent", new { id = item.fakeSSN })
                </td>
            </tr>
        }

    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
